(function() {var type_impls = {
"kimchi":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#519-533\">source</a><a href=\"#impl-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>&gt; <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>: Field,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.pow\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#524-532\">source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/enum.Operations.html#tymethod.pow\" class=\"fn\">pow</a>(self, p: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Exponentiate a constant expression.</p>\n</div></details></div></details>",0,"kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#728-858\">source</a><a href=\"#impl-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>: Field,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.apply_feature_flags\" class=\"method\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#854-857\">source</a><h4 class=\"code-header\">pub fn <a href=\"kimchi/circuits/expr/enum.Operations.html#tymethod.apply_feature_flags\" class=\"fn\">apply_feature_flags</a>(&amp;self, features: &amp;<a class=\"struct\" href=\"kimchi/circuits/constraints/struct.FeatureFlags.html\" title=\"struct kimchi::circuits::constraints::FeatureFlags\">FeatureFlags</a>) -&gt; Self</h4></section></div></details>",0,"kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<section id=\"impl-Eq-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#364\">source</a><a href=\"#impl-Eq-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h3></section>","Eq","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2540-2559\">source</a><a href=\"#impl-Sub-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>: Field,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2545-2558\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#377-381\">source</a><a href=\"#impl-From%3CT%3E-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#378-380\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(x: T) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<T>","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2561-2587\">source</a><a href=\"#impl-Mul-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>: Field,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2566-2586\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Literal-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#383-403\">source</a><a href=\"#impl-Literal-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>&gt; <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.F\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.F\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" class=\"associatedtype\">F</a> = &lt;T as <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>&gt;::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a></h4></section><section id=\"method.literal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#385-387\">source</a><a href=\"#method.literal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/trait.Literal.html#tymethod.literal\" class=\"fn\">literal</a>(x: Self::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>) -&gt; Self</h4></section><section id=\"method.to_literal\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#388-396\">source</a><a href=\"#method.to_literal\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/trait.Literal.html#tymethod.to_literal\" class=\"fn\">to_literal</a>(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>, Self&gt;</h4></section><section id=\"method.to_literal_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#397-402\">source</a><a href=\"#method.to_literal_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/trait.Literal.html#tymethod.to_literal_ref\" class=\"fn\">to_literal_ref</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Self::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>&gt;</h4></section></div></details>","Literal","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-One-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2485-2500\">source</a><a href=\"#impl-One-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>: Field,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2489-2491\">source</a><a href=\"#method.one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\" class=\"fn\">one</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the multiplicative identity element of <code>Self</code>, <code>1</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#tymethod.one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2493-2499\">source</a><a href=\"#method.is_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\" class=\"fn\">is_one</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the multiplicative identity. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.is_one\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_one\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#100\">source</a><a href=\"#method.set_one\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html#method.set_one\" class=\"fn\">set_one</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>.</div></details></div></details>","One","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ToPolish%3CF,+Column%3E-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#436-517\">source</a><a href=\"#impl-ToPolish%3CF,+Column%3E-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, Column, T: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.ToPolish.html\" title=\"trait kimchi::circuits::expr::ToPolish\">ToPolish</a>&lt;F, Column&gt;&gt; <a class=\"trait\" href=\"kimchi/circuits/expr/trait.ToPolish.html\" title=\"trait kimchi::circuits::expr::ToPolish\">ToPolish</a>&lt;F, Column&gt; for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.to_polish\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#437-516\">source</a><a href=\"#method.to_polish\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"kimchi/circuits/expr/trait.ToPolish.html#tymethod.to_polish\" class=\"fn\">to_polish</a>(\n    &amp;self,\n    cache: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/collections/hash/map/struct.HashMap.html\" title=\"struct std::collections::hash::map::HashMap\">HashMap</a>&lt;<a class=\"struct\" href=\"kimchi/circuits/expr/struct.CacheId.html\" title=\"struct kimchi::circuits::expr::CacheId\">CacheId</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;,\n    res: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.PolishToken.html\" title=\"enum kimchi::circuits::expr::PolishToken\">PolishToken</a>&lt;F, Column&gt;&gt;\n)</h4></section></div></details>","ToPolish<F, Column>","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#364\">source</a><a href=\"#impl-Hash-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#364\">source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<section id=\"impl-StructuralEq-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#364\">source</a><a href=\"#impl-StructuralEq-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h3></section>","StructuralEq","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2502-2514\">source</a><a href=\"#impl-Neg-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.One.html\" title=\"trait num_traits::identities::One\">One</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&lt;Output = T::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2508-2513\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#364\">source</a><a href=\"#impl-PartialEq-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#364\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2468-2483\">source</a><a href=\"#impl-Zero-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>&gt; <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html\" title=\"trait num_traits::identities::Zero\">Zero</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>: Field,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2472-2474\">source</a><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\" class=\"fn\">zero</a>() -&gt; Self</h4></section></summary><div class='docblock'>Returns the additive identity element of <code>Self</code>, <code>0</code>. <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.zero\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2476-2482\">source</a><a href=\"#method.is_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>self</code> is equal to the additive identity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_zero\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/num-traits/0.2/src/num_traits/identities.rs.html#23\">source</a><a href=\"#method.set_zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/num-traits/0.2/num_traits/identities/trait.Zero.html#method.set_zero\" class=\"fn\">set_zero</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Sets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.</div></details></div></details>","Zero","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<section id=\"impl-StructuralPartialEq-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#364\">source</a><a href=\"#impl-StructuralPartialEq-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h3></section>","StructuralPartialEq","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2516-2538\">source</a><a href=\"#impl-Add-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"kimchi/circuits/expr/trait.Literal.html\" title=\"trait kimchi::circuits::expr::Literal\">Literal</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"kimchi/circuits/expr/trait.Literal.html#associatedtype.F\" title=\"type kimchi::circuits::expr::Literal::F\">F</a>: Field,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#2521-2537\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/nightly/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#364\">source</a><a href=\"#impl-Debug-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#364\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Operations%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#364\">source</a><a href=\"#impl-Clone-for-Operations%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/kimchi/circuits/expr.rs.html#364\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"kimchi/circuits/expr/enum.Operations.html\" title=\"enum kimchi::circuits::expr::Operations\">Operations</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","kimchi::circuits::expr::ConstantExpr","kimchi::circuits::expr::Expr","kimchi::folding::expressions::FoldingExp"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()