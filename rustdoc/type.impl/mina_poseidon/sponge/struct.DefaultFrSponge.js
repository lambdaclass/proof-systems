(function() {var type_impls = {
"kimchi_msm":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DefaultFrSponge%3CFr,+SC%3E\" class=\"impl\"><a href=\"#impl-DefaultFrSponge%3CFr,+SC%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Fr, SC&gt; DefaultFrSponge&lt;Fr, SC&gt;<div class=\"where\">where\n    Fr: PrimeField,\n    SC: SpongeConstants,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.squeeze\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">squeeze</a>(&amp;mut self, num_limbs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>) -&gt; Fr</h4></section></div></details>",0,"kimchi_msm::ScalarSponge"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FrSponge%3CFr%3E-for-DefaultFrSponge%3CFr,+PlonkSpongeConstantsKimchi%3E\" class=\"impl\"><a href=\"#impl-FrSponge%3CFr%3E-for-DefaultFrSponge%3CFr,+PlonkSpongeConstantsKimchi%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Fr&gt; FrSponge&lt;Fr&gt; for DefaultFrSponge&lt;Fr, PlonkSpongeConstantsKimchi&gt;<div class=\"where\">where\n    Fr: PrimeField,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method trait-impl\"><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">new</a>(\n    params: &amp;'static ArithmeticSpongeParams&lt;Fr&gt;\n) -&gt; DefaultFrSponge&lt;Fr, PlonkSpongeConstantsKimchi&gt;</h4></section></summary><div class='docblock'>Creates a new Fr-Sponge.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.absorb\" class=\"method trait-impl\"><a href=\"#method.absorb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">absorb</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Fr</a>)</h4></section></summary><div class='docblock'>Absorbs the field element into the sponge.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.absorb_multiple\" class=\"method trait-impl\"><a href=\"#method.absorb_multiple\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">absorb_multiple</a>(&amp;mut self, x: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[Fr]</a>)</h4></section></summary><div class='docblock'>Absorbs a slice of field elements into the sponge.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.challenge\" class=\"method trait-impl\"><a href=\"#method.challenge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">challenge</a>(&amp;mut self) -&gt; ScalarChallenge&lt;Fr&gt;</h4></section></summary><div class='docblock'>Creates a [<code>ScalarChallenge</code>] by squeezing the sponge.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.digest\" class=\"method trait-impl\"><a href=\"#method.digest\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">digest</a>(self) -&gt; Fr</h4></section></summary><div class='docblock'>Consumes the sponge and returns the current digest, by squeezing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.absorb_evaluations\" class=\"method trait-impl\"><a href=\"#method.absorb_evaluations\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">absorb_evaluations</a>(\n    &amp;mut self,\n    e: &amp;ProofEvaluations&lt;PointEvaluations&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Fr&gt;&gt;&gt;\n)</h4></section></summary><div class='docblock'>Absorbs the given evaluations into the sponge.</div></details></div></details>","FrSponge<Fr>","kimchi_msm::ScalarSponge"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()