(function() {var type_impls = {
"kimchi_msm":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PairingProof%3CPair%3E\" class=\"impl\"><a href=\"#impl-PairingProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, G, G2, Pair&gt; PairingProof&lt;Pair&gt;<div class=\"where\">where\n    F: PrimeField,\n    G: CommitmentCurve&lt;ScalarField = F&gt;,\n    G2: CommitmentCurve&lt;ScalarField = F&gt;,\n    Pair: PairingEngine&lt;G1Affine = G, G2Affine = G2&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.create\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">create</a>&lt;D&gt;(\n    srs: &amp;PairingSRS&lt;Pair&gt;,\n    plnms: &amp;[(DensePolynomialOrEvaluations&lt;'_, &lt;G as AffineCurve&gt;::ScalarField, D&gt;, PolyComm&lt;&lt;G as AffineCurve&gt;::ScalarField&gt;)],\n    elm: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[F]</a>,\n    polyscale: F\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;PairingProof&lt;Pair&gt;&gt;<div class=\"where\">where\n    D: EvaluationDomain&lt;F&gt;,</div></h4></section><section id=\"method.verify\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">verify</a>(\n    &amp;self,\n    srs: &amp;PairingSRS&lt;Pair&gt;,\n    evaluations: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;Evaluation&lt;G&gt;&gt;,\n    polyscale: F,\n    elm: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.slice.html\">[F]</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></div></details>",0,"kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OpenProof%3CG%3E-for-PairingProof%3CPair%3E\" class=\"impl\"><a href=\"#impl-OpenProof%3CG%3E-for-PairingProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F, G, G2, Pair&gt; OpenProof&lt;G&gt; for PairingProof&lt;Pair&gt;<div class=\"where\">where\n    F: PrimeField,\n    G: CommitmentCurve&lt;ScalarField = F&gt;,\n    G2: CommitmentCurve&lt;ScalarField = F&gt;,\n    Pair: PairingEngine&lt;G1Affine = G, G2Affine = G2&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.SRS\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.SRS\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">SRS</a> = PairingSRS&lt;Pair&gt;</h4></section><section id=\"method.open\" class=\"method trait-impl\"><a href=\"#method.open\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">open</a>&lt;EFqSponge, RNG, D&gt;(\n    srs: &amp;&lt;PairingProof&lt;Pair&gt; as OpenProof&lt;G&gt;&gt;::SRS,\n    _group_map: &amp;&lt;G as CommitmentCurve&gt;::Map,\n    plnms: &amp;[(DensePolynomialOrEvaluations&lt;'_, &lt;G as AffineCurve&gt;::ScalarField, D&gt;, PolyComm&lt;&lt;G as AffineCurve&gt;::ScalarField&gt;)],\n    elm: &amp;[&lt;G as AffineCurve&gt;::ScalarField],\n    polyscale: &lt;G as AffineCurve&gt;::ScalarField,\n    _evalscale: &lt;G as AffineCurve&gt;::ScalarField,\n    _sponge: EFqSponge,\n    _rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut RNG</a>\n) -&gt; PairingProof&lt;Pair&gt;<div class=\"where\">where\n    D: EvaluationDomain&lt;F&gt;,\n    EFqSponge: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + FqSponge&lt;&lt;G as AffineCurve&gt;::BaseField, G, F&gt;,\n    RNG: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a>,</div></h4></section><section id=\"method.verify\" class=\"method trait-impl\"><a href=\"#method.verify\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">verify</a>&lt;EFqSponge, RNG&gt;(\n    srs: &amp;&lt;PairingProof&lt;Pair&gt; as OpenProof&lt;G&gt;&gt;::SRS,\n    _group_map: &amp;&lt;G as CommitmentCurve&gt;::Map,\n    batch: &amp;mut [BatchEvaluationProof&lt;'_, G, EFqSponge, PairingProof&lt;Pair&gt;&gt;],\n    _rng: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut RNG</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    EFqSponge: FqSponge&lt;&lt;G as AffineCurve&gt;::BaseField, G, F&gt;,\n    RNG: <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.RngCore.html\" title=\"trait rand_core::RngCore\">RngCore</a> + <a class=\"trait\" href=\"https://rust-random.github.io/rand/rand_core/trait.CryptoRng.html\" title=\"trait rand_core::CryptoRng\">CryptoRng</a>,</div></h4></section></div></details>","OpenProof<G>","kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-PairingProof%3CPair%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-PairingProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, Pair&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for PairingProof&lt;Pair&gt;<div class=\"where\">where\n    Pair: PairingEngine,\n    &lt;Pair as PairingEngine&gt;::G1Affine: CanonicalDeserialize + CanonicalSerialize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;PairingProof&lt;Pair&gt;, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.196/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-PairingProof%3CPair%3E\" class=\"impl\"><a href=\"#impl-Clone-for-PairingProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Pair&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for PairingProof&lt;Pair&gt;<div class=\"where\">where\n    Pair: PairingEngine,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; PairingProof&lt;Pair&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-PairingProof%3CPair%3E\" class=\"impl\"><a href=\"#impl-Default-for-PairingProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Pair&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for PairingProof&lt;Pair&gt;<div class=\"where\">where\n    Pair: PairingEngine,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; PairingProof&lt;Pair&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-PairingProof%3CPair%3E\" class=\"impl\"><a href=\"#impl-Debug-for-PairingProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Pair&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for PairingProof&lt;Pair&gt;<div class=\"where\">where\n    Pair: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + PairingEngine,\n    &lt;Pair as PairingEngine&gt;::G1Affine: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","kimchi_msm::OpeningProof"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-PairingProof%3CPair%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-PairingProof%3CPair%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Pair&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for PairingProof&lt;Pair&gt;<div class=\"where\">where\n    Pair: PairingEngine,\n    &lt;Pair as PairingEngine&gt;::G1Affine: CanonicalDeserialize + CanonicalSerialize,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.196/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","kimchi_msm::OpeningProof"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()